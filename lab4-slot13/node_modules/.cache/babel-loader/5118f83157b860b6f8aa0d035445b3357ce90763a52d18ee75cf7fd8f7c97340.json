{"ast":null,"code":"var _jsxFileName = \"D:\\\\SE18C02-FER202\\\\slot2\\\\lab4-slot13\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button, Form, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const quizData = [{\n  question: \"What is ReactJS?\",\n  answers: [\"A JavaScript library for building user interfaces\", \"A programming language\", \"A database management system\"],\n  correctAnswer: \"A JavaScript library for building user interfaces\"\n}, {\n  question: \"What is JSX?\",\n  answers: [\"A programming language\", \"A file format\", \"A syntax extension for JavaScript\"],\n  correctAnswer: \"A syntax extension for JavaScript\"\n}];\nconst Quiz = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [userQuestions, setUserQuestions] = useState(quizData); // Use quizData as initial state\n\n  const handleAnswerSelect = answer => {\n    setSelectedAnswer(answer);\n  };\n  const handleNextQuestion = () => {\n    if (selectedAnswer === userQuestions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    setSelectedAnswer(null);\n    if (currentQuestion < userQuestions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n  useEffect(() => {\n    // Reset state when quiz restarts\n    if (showResult) {\n      setCurrentQuestion(0);\n      setScore(0);\n      setShowResult(false);\n    }\n  }, [showResult]);\n\n  // Function to handle changes in question and answer inputs\n  const handleInputChange = (index, field, value) => {\n    const updatedQuestions = [...userQuestions];\n    updatedQuestions[index][field] = value;\n    setUserQuestions(updatedQuestions);\n  };\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Quiz Completed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", score, \" out of \", userQuestions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => setShowResult(false),\n          children: \"Restart Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question \", currentQuestion + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userQuestions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: userQuestions[currentQuestion].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          label: answer,\n          id: `radio-${index}`,\n          name: \"answerOptions\",\n          value: answer,\n          checked: selectedAnswer === answer,\n          onChange: () => handleAnswerSelect(answer)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"mt-3\",\n        onClick: handleNextQuestion,\n        disabled: !selectedAnswer,\n        children: currentQuestion === userQuestions.length - 1 ? \"Finish\" : \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-4\",\n        children: \"Edit Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), userQuestions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: q.question,\n            onChange: e => handleInputChange(index, \"question\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), q.answers.map((answer, ansIndex) => /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\"Answer \", ansIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: answer,\n            onChange: e => {\n              const updatedAnswers = [...userQuestions];\n              updatedAnswers[index].answers[ansIndex] = e.target.value;\n              setUserQuestions([...updatedAnswers]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, ansIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Correct Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: q.correctAnswer,\n            onChange: e => handleInputChange(index, \"correctAnswer\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"Fxf/+2QlO29h2wobg9l4DDRJ+5w=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","Form","Container","jsxDEV","_jsxDEV","quizData","question","answers","correctAnswer","Quiz","_s","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","score","setScore","showResult","setShowResult","userQuestions","setUserQuestions","handleAnswerSelect","answer","handleNextQuestion","length","handleInputChange","index","field","value","updatedQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","Check","type","label","id","name","checked","onChange","disabled","q","Group","Label","Control","e","target","ansIndex","updatedAnswers","_c","$RefreshReg$"],"sources":["D:/SE18C02-FER202/slot2/lab4-slot13/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, Form, Container } from \"react-bootstrap\";\r\n\r\nexport const quizData = [\r\n  {\r\n    question: \"What is ReactJS?\",\r\n    answers: [\r\n      \"A JavaScript library for building user interfaces\",\r\n      \"A programming language\",\r\n      \"A database management system\",\r\n    ],\r\n    correctAnswer: \"A JavaScript library for building user interfaces\",\r\n  },\r\n  {\r\n    question: \"What is JSX?\",\r\n    answers: [\r\n      \"A programming language\",\r\n      \"A file format\",\r\n      \"A syntax extension for JavaScript\",\r\n    ],\r\n    correctAnswer: \"A syntax extension for JavaScript\",\r\n  },\r\n];\r\n\r\nconst Quiz = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [userQuestions, setUserQuestions] = useState(quizData); // Use quizData as initial state\r\n\r\n  const handleAnswerSelect = (answer) => {\r\n    setSelectedAnswer(answer);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (selectedAnswer === userQuestions[currentQuestion].correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    setSelectedAnswer(null);\r\n\r\n    if (currentQuestion < userQuestions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      setShowResult(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Reset state when quiz restarts\r\n    if (showResult) {\r\n      setCurrentQuestion(0);\r\n      setScore(0);\r\n      setShowResult(false);\r\n    }\r\n  }, [showResult]);\r\n\r\n  // Function to handle changes in question and answer inputs\r\n  const handleInputChange = (index, field, value) => {\r\n    const updatedQuestions = [...userQuestions];\r\n    updatedQuestions[index][field] = value;\r\n    setUserQuestions(updatedQuestions);\r\n  };\r\n\r\n  if (showResult) {\r\n    return (\r\n      <Container className=\"mt-5\">\r\n        <Card className=\"p-4 text-center\">\r\n          <h2>Quiz Completed!</h2>\r\n          <p>\r\n            Your score: {score} out of {userQuestions.length}\r\n          </p>\r\n          <Button variant=\"primary\" onClick={() => setShowResult(false)}>\r\n            Restart Quiz\r\n          </Button>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Card className=\"p-4\">\r\n        <h2>Question {currentQuestion + 1}</h2>\r\n        <p>{userQuestions[currentQuestion].question}</p>\r\n        <Form>\r\n          {userQuestions[currentQuestion].answers.map((answer, index) => (\r\n            <Form.Check\r\n              key={index}\r\n              type=\"radio\"\r\n              label={answer}\r\n              id={`radio-${index}`}\r\n              name=\"answerOptions\"\r\n              value={answer}\r\n              checked={selectedAnswer === answer}\r\n              onChange={() => handleAnswerSelect(answer)}\r\n            />\r\n          ))}\r\n        </Form>\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"mt-3\"\r\n          onClick={handleNextQuestion}\r\n          disabled={!selectedAnswer}\r\n        >\r\n          {currentQuestion === userQuestions.length - 1 ? \"Finish\" : \"Next\"}\r\n        </Button>\r\n\r\n        {/* User input section */}\r\n        <h3 className=\"mt-4\">Edit Questions</h3>\r\n        {userQuestions.map((q, index) => (\r\n          <div key={index} className=\"mt-3\">\r\n            <Form.Group>\r\n              <Form.Label>Question {index + 1}</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={q.question}\r\n                onChange={(e) =>\r\n                  handleInputChange(index, \"question\", e.target.value)\r\n                }\r\n              />\r\n            </Form.Group>\r\n            {q.answers.map((answer, ansIndex) => (\r\n              <Form.Group key={ansIndex}>\r\n                <Form.Label>Answer {ansIndex + 1}</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={answer}\r\n                  onChange={(e) => {\r\n                    const updatedAnswers = [...userQuestions];\r\n                    updatedAnswers[index].answers[ansIndex] = e.target.value;\r\n                    setUserQuestions([...updatedAnswers]);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            ))}\r\n            <Form.Group>\r\n              <Form.Label>Correct Answer</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={q.correctAnswer}\r\n                onChange={(e) =>\r\n                  handleInputChange(index, \"correctAnswer\", e.target.value)\r\n                }\r\n              />\r\n            </Form.Group>\r\n          </div>\r\n        ))}\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}