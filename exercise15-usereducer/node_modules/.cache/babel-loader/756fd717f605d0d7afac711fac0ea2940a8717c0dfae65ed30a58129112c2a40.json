{"ast":null,"code":"var _jsxFileName = \"D:\\\\SE18C02-FER202\\\\slot2\\\\exercise15-usereducer\\\\src\\\\components\\\\QuestionBank1.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState, useEffect } from \"react\";\nimport { Button, Container, Card } from \"react-bootstrap\";\nimport { FaCheckCircle, FaTimesCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [{\n    id: 1,\n    question: \"What is the capital of Australia?\",\n    options: [\"Sydney\", \"Canberra\", \"Melbourne\", \"Perth\"],\n    answer: \"Canberra\"\n  }, {\n    id: 2,\n    question: \"Which planet is known as the Red Planet?\",\n    options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\n    answer: \"Mars\"\n  }, {\n    id: 3,\n    question: \"What is the largest ocean on Earth?\",\n    options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Pacific Ocean\", \"Arctic Ocean\"],\n    answer: \"Pacific Ocean\"\n  }],\n  currentQuestion: 0,\n  selectedOption: \"\",\n  score: 0,\n  showScore: false\n};\nfunction quizReducer(state, action) {\n  switch (action.type) {\n    case \"SELECT_OPTION\":\n      return {\n        ...state,\n        selectedOption: action.payload\n      };\n    case \"NEXT_QUESTION\":\n      const isCorrect = state.selectedOption === state.questions[state.currentQuestion].answer;\n      return {\n        ...state,\n        score: isCorrect ? state.score + 1 : state.score,\n        currentQuestion: state.currentQuestion + 1,\n        selectedOption: \"\",\n        showScore: state.currentQuestion + 1 === state.questions.length\n      };\n    case \"RESTART_QUIZ\":\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n}\nfunction QuestionBank1() {\n  _s();\n  const [state, dispatch] = useReducer(quizReducer, initialState);\n  const {\n    questions,\n    currentQuestion,\n    selectedOption,\n    score,\n    showScore\n  } = state;\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [showFeedback, setShowFeedback] = useState(false); // Thêm state để kiểm soát hiển thị phản hồi\n\n  useEffect(() => {\n    setTimeLeft(10);\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestion]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n  }, [timeLeft]);\n  useEffect(() => {\n    if (showScore) {\n      const highScore = localStorage.getItem(\"highScore\");\n      if (!highScore || score > parseInt(highScore)) {\n        localStorage.setItem(\"highScore\", score);\n      }\n    }\n  }, [showScore, score]);\n  const handleOptionSelect = option => {\n    dispatch({\n      type: \"SELECT_OPTION\",\n      payload: option\n    });\n  };\n  const handleNextQuestion = () => {\n    if (selectedOption) {\n      // Kiểm tra xem người dùng đã chọn đáp án chưa\n      const correct = selectedOption === questions[currentQuestion].answer;\n      setIsCorrect(correct);\n      setShowFeedback(true); // Hiển thị phản hồi\n      dispatch({\n        type: \"NEXT_QUESTION\"\n      });\n    }\n  };\n  const handleRestartQuiz = () => {\n    dispatch({\n      type: \"RESTART_QUIZ\"\n    });\n    setIsCorrect(null);\n    setShowFeedback(false); // Ẩn phản hồi khi bắt đầu lại quiz\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"p-4\",\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your Score: \", score, \" / \", questions.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), \"High Score: \", localStorage.getItem(\"highScore\") || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleRestartQuiz,\n          children: \"Restart Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Question \", currentQuestion + 1, \" / \", questions.length, \":\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 67\n          }, this), questions[currentQuestion].question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n            variant: selectedOption === option ? \"success\" : \"outline-secondary\",\n            className: \"m-2\",\n            onClick: () => handleOptionSelect(option),\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), showFeedback &&\n        /*#__PURE__*/\n        // Chỉ hiển thị phản hồi khi showFeedback là true\n        _jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: isCorrect !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: isCorrect ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-success\",\n              children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 25\n              }, this), \" Correct!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: [/*#__PURE__*/_jsxDEV(FaTimesCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 25\n              }, this), \" Incorrect! The correct answer is:\", \" \", questions[currentQuestion].answer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [\"Time Left:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: timeLeft < 5 ? \"red\" : \"black\"\n            },\n            children: [timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mt-3\",\n          disabled: !selectedOption,\n          onClick: handleNextQuestion,\n          children: currentQuestion === questions.length - 1 ? \"Finish Quiz\" : \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionBank1, \"cwg707knEWpebFDbq9ApjRmu1Ws=\");\n_c = QuestionBank1;\nexport default QuestionBank1;\nvar _c;\n$RefreshReg$(_c, \"QuestionBank1\");","map":{"version":3,"names":["React","useReducer","useState","useEffect","Button","Container","Card","FaCheckCircle","FaTimesCircle","jsxDEV","_jsxDEV","initialState","questions","id","question","options","answer","currentQuestion","selectedOption","score","showScore","quizReducer","state","action","type","payload","isCorrect","length","QuestionBank1","_s","dispatch","setIsCorrect","timeLeft","setTimeLeft","showFeedback","setShowFeedback","timer","setInterval","prevTime","clearInterval","handleNextQuestion","highScore","localStorage","getItem","parseInt","setItem","handleOptionSelect","option","correct","handleRestartQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","index","style","color","disabled","_c","$RefreshReg$"],"sources":["D:/SE18C02-FER202/slot2/exercise15-usereducer/src/components/QuestionBank1.js"],"sourcesContent":["import React, { useReducer, useState, useEffect } from \"react\";\r\nimport { Button, Container, Card } from \"react-bootstrap\";\r\nimport { FaCheckCircle, FaTimesCircle } from \"react-icons/fa\";\r\n\r\nconst initialState = {\r\n  questions: [\r\n    {\r\n      id: 1,\r\n      question: \"What is the capital of Australia?\",\r\n      options: [\"Sydney\", \"Canberra\", \"Melbourne\", \"Perth\"],\r\n      answer: \"Canberra\",\r\n    },\r\n    {\r\n      id: 2,\r\n      question: \"Which planet is known as the Red Planet?\",\r\n      options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\r\n      answer: \"Mars\",\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"What is the largest ocean on Earth?\",\r\n      options: [\r\n        \"Atlantic Ocean\",\r\n        \"Indian Ocean\",\r\n        \"Pacific Ocean\",\r\n        \"Arctic Ocean\",\r\n      ],\r\n      answer: \"Pacific Ocean\",\r\n    },\r\n  ],\r\n  currentQuestion: 0,\r\n  selectedOption: \"\",\r\n  score: 0,\r\n  showScore: false,\r\n};\r\n\r\nfunction quizReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"SELECT_OPTION\":\r\n      return { ...state, selectedOption: action.payload };\r\n    case \"NEXT_QUESTION\":\r\n      const isCorrect =\r\n        state.selectedOption === state.questions[state.currentQuestion].answer;\r\n      return {\r\n        ...state,\r\n        score: isCorrect ? state.score + 1 : state.score,\r\n        currentQuestion: state.currentQuestion + 1,\r\n        selectedOption: \"\",\r\n        showScore: state.currentQuestion + 1 === state.questions.length,\r\n      };\r\n    case \"RESTART_QUIZ\":\r\n      return { ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction QuestionBank1() {\r\n  const [state, dispatch] = useReducer(quizReducer, initialState);\r\n  const { questions, currentQuestion, selectedOption, score, showScore } =\r\n    state;\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n  const [showFeedback, setShowFeedback] = useState(false); // Thêm state để kiểm soát hiển thị phản hồi\r\n\r\n  useEffect(() => {\r\n    setTimeLeft(10);\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prevTime) => prevTime - 1);\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [currentQuestion]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      handleNextQuestion();\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  useEffect(() => {\r\n    if (showScore) {\r\n      const highScore = localStorage.getItem(\"highScore\");\r\n      if (!highScore || score > parseInt(highScore)) {\r\n        localStorage.setItem(\"highScore\", score);\r\n      }\r\n    }\r\n  }, [showScore, score]);\r\n\r\n  const handleOptionSelect = (option) => {\r\n    dispatch({ type: \"SELECT_OPTION\", payload: option });\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (selectedOption) {\r\n      // Kiểm tra xem người dùng đã chọn đáp án chưa\r\n      const correct = selectedOption === questions[currentQuestion].answer;\r\n      setIsCorrect(correct);\r\n      setShowFeedback(true); // Hiển thị phản hồi\r\n      dispatch({ type: \"NEXT_QUESTION\" });\r\n    }\r\n  };\r\n\r\n  const handleRestartQuiz = () => {\r\n    dispatch({ type: \"RESTART_QUIZ\" });\r\n    setIsCorrect(null);\r\n    setShowFeedback(false); // Ẩn phản hồi khi bắt đầu lại quiz\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Card className=\"p-4\">\r\n        {showScore ? (\r\n          <div className=\"text-center\">\r\n            <h2>\r\n              Your Score: {score} / {questions.length}\r\n              <br />\r\n              High Score: {localStorage.getItem(\"highScore\") || 0}\r\n            </h2>\r\n            <Button variant=\"primary\" onClick={handleRestartQuiz}>\r\n              Restart Quiz\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h4>\r\n              Question {currentQuestion + 1} / {questions.length}:<br />\r\n              {questions[currentQuestion].question}\r\n            </h4>\r\n            <div className=\"mt-3\">\r\n              {questions[currentQuestion].options.map((option, index) => (\r\n                <Button\r\n                  key={index}\r\n                  variant={\r\n                    selectedOption === option ? \"success\" : \"outline-secondary\"\r\n                  }\r\n                  className=\"m-2\"\r\n                  onClick={() => handleOptionSelect(option)}\r\n                >\r\n                  {option}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n            {showFeedback && ( // Chỉ hiển thị phản hồi khi showFeedback là true\r\n              <div className=\"mt-3\">\r\n                {isCorrect !== null && (\r\n                  <div className=\"mt-2\">\r\n                    {isCorrect ? (\r\n                      <span className=\"text-success\">\r\n                        <FaCheckCircle /> Correct!\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"text-danger\">\r\n                        <FaTimesCircle /> Incorrect! The correct answer is:{\" \"}\r\n                        {questions[currentQuestion].answer}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n            <div className=\"mt-3\">\r\n              Time Left:{\" \"}\r\n              <span style={{ color: timeLeft < 5 ? \"red\" : \"black\" }}>\r\n                {timeLeft}s\r\n              </span>\r\n            </div>\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"mt-3\"\r\n              disabled={!selectedOption}\r\n              onClick={handleNextQuestion}\r\n            >\r\n              {currentQuestion === questions.length - 1\r\n                ? \"Finish Quiz\"\r\n                : \"Next Question\"}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default QuestionBank1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}