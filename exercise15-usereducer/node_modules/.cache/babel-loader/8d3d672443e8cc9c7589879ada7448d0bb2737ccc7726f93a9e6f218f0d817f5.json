{"ast":null,"code":"var _jsxFileName = \"D:\\\\SE18C02-FER202\\\\slot2\\\\exercise15-usereducer\\\\src\\\\components\\\\QuestionBank.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport { Button, Container, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [{\n    id: 1,\n    question: \"What is the capital of Australia?\",\n    options: [\"Sydney\", \"Canberra\", \"Melbourne\", \"Perth\"],\n    answer: \"Canberra\"\n  }, {\n    id: 2,\n    question: \"Which planet is known as the Red Planet?\",\n    options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\n    answer: \"Mars\"\n  }, {\n    id: 3,\n    question: \"What is the largest ocean on Earth?\",\n    options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Pacific Ocean\", \"Arctic Ocean\"],\n    answer: \"Pacific Ocean\"\n  }],\n  currentQuestion: 0,\n  selectedOption: \"\",\n  score: 0,\n  showScore: false\n};\nfunction quizReducer(state, action) {\n  switch (action.type) {\n    case \"SELECT_OPTION\":\n      return {\n        ...state,\n        selectedOption: action.payload\n      };\n    case \"NEXT_QUESTION\":\n      const isCorrect = state.selectedOption === state.questions[state.currentQuestion].answer;\n      return {\n        ...state,\n        score: isCorrect ? state.score + 1 : state.score,\n        currentQuestion: state.currentQuestion + 1,\n        selectedOption: \"\",\n        showScore: state.currentQuestion + 1 === state.questions.length // Hiển thị điểm khi hết câu hỏi\n      };\n    case \"RESTART_QUIZ\":\n      return {\n        ...initialState // Reset về trạng thái ban đầu\n      };\n    default:\n      return state;\n  }\n}\n// Component chính\nfunction QuestionBank() {\n  _s();\n  const [state, dispatch] = useReducer(quizReducer, initialState);\n  const {\n    questions,\n    currentQuestion,\n    selectedOption,\n    score,\n    showScore\n  } = state;\n  const handleOptionSelect = option => {\n    dispatch({\n      type: \"SELECT_OPTION\",\n      payload: option\n    });\n  };\n  const handleNextQuestion = () => {\n    dispatch({\n      type: \"NEXT_QUESTION\"\n    });\n  };\n  const handleRestartQuiz = () => {\n    dispatch({\n      type: \"RESTART_QUIZ\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"p-4\",\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your Score: \", score, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleRestartQuiz,\n          children: \"Restart Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Question \", questions[currentQuestion].id, \":\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 56\n          }, this), questions[currentQuestion].question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n            variant: selectedOption === option ? \"success\" : \"outline-secondary\",\n            className: \"m-2\",\n            onClick: () => handleOptionSelect(option),\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"mt-3\",\n          disabled: !selectedOption,\n          onClick: handleNextQuestion,\n          children: currentQuestion === questions.length - 1 ? \"Finish Quiz\" : \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionBank, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = QuestionBank;\nexport default QuestionBank;\nvar _c;\n$RefreshReg$(_c, \"QuestionBank\");","map":{"version":3,"names":["React","useReducer","Button","Container","Card","jsxDEV","_jsxDEV","initialState","questions","id","question","options","answer","currentQuestion","selectedOption","score","showScore","quizReducer","state","action","type","payload","isCorrect","length","QuestionBank","_s","dispatch","handleOptionSelect","option","handleNextQuestion","handleRestartQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","index","disabled","_c","$RefreshReg$"],"sources":["D:/SE18C02-FER202/slot2/exercise15-usereducer/src/components/QuestionBank.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\nimport { Button, Container, Card } from \"react-bootstrap\";\r\nconst initialState = {\r\n  questions: [\r\n    {\r\n      id: 1,\r\n      question: \"What is the capital of Australia?\",\r\n      options: [\"Sydney\", \"Canberra\", \"Melbourne\", \"Perth\"],\r\n      answer: \"Canberra\",\r\n    },\r\n    {\r\n      id: 2,\r\n      question: \"Which planet is known as the Red Planet?\",\r\n      options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\r\n      answer: \"Mars\",\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"What is the largest ocean on Earth?\",\r\n      options: [\r\n        \"Atlantic Ocean\",\r\n        \"Indian Ocean\",\r\n        \"Pacific Ocean\",\r\n        \"Arctic Ocean\",\r\n      ],\r\n      answer: \"Pacific Ocean\",\r\n    },\r\n  ],\r\n  currentQuestion: 0,\r\n  selectedOption: \"\",\r\n  score: 0,\r\n  showScore: false,\r\n};\r\n\r\nfunction quizReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"SELECT_OPTION\":\r\n      return { ...state, selectedOption: action.payload };\r\n\r\n    case \"NEXT_QUESTION\":\r\n      const isCorrect =\r\n        state.selectedOption === state.questions[state.currentQuestion].answer;\r\n      return {\r\n        ...state,\r\n        score: isCorrect ? state.score + 1 : state.score,\r\n        currentQuestion: state.currentQuestion + 1,\r\n        selectedOption: \"\",\r\n        showScore: state.currentQuestion + 1 === state.questions.length, // Hiển thị điểm khi hết câu hỏi\r\n      };\r\n\r\n    case \"RESTART_QUIZ\":\r\n      return {\r\n        ...initialState, // Reset về trạng thái ban đầu\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// Component chính\r\nfunction QuestionBank() {\r\n  const [state, dispatch] = useReducer(quizReducer, initialState);\r\n  const { questions, currentQuestion, selectedOption, score, showScore } =\r\n    state;\r\n\r\n  const handleOptionSelect = (option) => {\r\n    dispatch({ type: \"SELECT_OPTION\", payload: option });\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    dispatch({ type: \"NEXT_QUESTION\" });\r\n  };\r\n\r\n  const handleRestartQuiz = () => {\r\n    dispatch({ type: \"RESTART_QUIZ\" });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Card className=\"p-4\">\r\n        {showScore ? (\r\n          <div className=\"text-center\">\r\n            <h2>\r\n              Your Score: {score} / {questions.length}\r\n            </h2>\r\n            <Button variant=\"primary\" onClick={handleRestartQuiz}>\r\n              Restart Quiz\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h4>\r\n              Question {questions[currentQuestion].id}:<br />\r\n              {questions[currentQuestion].question}\r\n            </h4>\r\n            <div className=\"mt-3\">\r\n              {questions[currentQuestion].options.map((option, index) => (\r\n                <Button\r\n                  key={index}\r\n                  variant={\r\n                    selectedOption === option ? \"success\" : \"outline-secondary\"\r\n                  }\r\n                  className=\"m-2\"\r\n                  onClick={() => handleOptionSelect(option)}\r\n                >\r\n                  {option}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"mt-3\"\r\n              disabled={!selectedOption}\r\n              onClick={handleNextQuestion}\r\n            >\r\n              {currentQuestion === questions.length - 1\r\n                ? \"Finish Quiz\"\r\n                : \"Next Question\"}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default QuestionBank;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}