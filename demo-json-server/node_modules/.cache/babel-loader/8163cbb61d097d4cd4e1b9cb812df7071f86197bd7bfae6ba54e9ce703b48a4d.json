{"ast":null,"code":"var _jsxFileName = \"D:\\\\SE18C02-FER202\\\\slot2\\\\demo-json-server\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Sử dụng useEffect để thực hiện tác vụ fetching khi component mount\n  useEffect(() => {\n    // Định nghĩa hàm async để thực hiện fetch dữ liệu\n    const fetchData = async () => {\n      try {\n        // Gửi yêu cầu fetch và chờ kết quả\n        const response = await fetch(\"http://localhost:3000/posts\");\n        if (!response.ok) {\n          throw new Error(\"Không thể lấy dữ liệu\");\n        }\n        const data = await response.json(); // Chuyển dữ liệu về dạng JSON\n        setData(data); // Lưu dữ liệu vào state\n        setLoading(false); // Đánh dấu việc tải xong\n      } catch (error) {\n        console.error(\"Lỗi khi lấy dữ liệu:\", error);\n      }\n    };\n    fetchData(); // Gọi hàm fetchData khi component mount\n  }, []); // Chạy 1 lần khi component được mount\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0110ang t\\u1EA3i...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this); // Hiển thị thông báo đang tải\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Danh s\\xE1ch b\\xE0i vi\\u1EBFt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"Zn4cs3026OJRBhxLd0Oqj+bUOXY=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PostList","_s","data","setData","loading","setLoading","fetchData","response","fetch","ok","Error","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","content","id","_c","$RefreshReg$"],"sources":["D:/SE18C02-FER202/slot2/demo-json-server/src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst PostList = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Sử dụng useEffect để thực hiện tác vụ fetching khi component mount\r\n  useEffect(() => {\r\n    // Định nghĩa hàm async để thực hiện fetch dữ liệu\r\n    const fetchData = async () => {\r\n      try {\r\n        // Gửi yêu cầu fetch và chờ kết quả\r\n        const response = await fetch(\"http://localhost:3000/posts\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Không thể lấy dữ liệu\");\r\n        }\r\n        const data = await response.json(); // Chuyển dữ liệu về dạng JSON\r\n        setData(data); // Lưu dữ liệu vào state\r\n        setLoading(false); // Đánh dấu việc tải xong\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi lấy dữ liệu:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData(); // Gọi hàm fetchData khi component mount\r\n  }, []); // Chạy 1 lần khi component được mount\r\n\r\n  if (loading) {\r\n    return <div>Đang tải...</div>; // Hiển thị thông báo đang tải\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Danh sách bài viết</h1>\r\n      <ul>\r\n        {data.map((post) => (\r\n          <li key={post.id}>\r\n            <h3>{post.title}</h3>\r\n            <p>{post.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,MAAMR,IAAI,GAAG,MAAMK,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;QACpCR,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;QACfG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAe,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACjC;EAEA,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BnB,OAAA;MAAAe,QAAA,EACGZ,IAAI,CAACiB,GAAG,CAAEC,IAAI,iBACbrB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAAKM,IAAI,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBnB,OAAA;UAAAe,QAAA,EAAIM,IAAI,CAACE;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFdE,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CA1CID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}