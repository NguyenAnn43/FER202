{"ast":null,"code":"var _jsxFileName = \"D:\\\\SE18C02-FER202\\\\slot2\\\\demo-json-server\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"; // Import Link từ react-router-dom\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Use useEffect to fetch data when the component mounts\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3000/posts\");\n        setData(response.data); // Save response data to state\n        setLoading(false); // Mark loading as complete\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false); // Make sure to stop loading on error\n      }\n    };\n    fetchData();\n  }, []); // Empty array ensures this runs only once when the component mounts\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0110ang t\\u1EA3i...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this); // Show loading message while data is being fetched\n  }\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Kh\\xF4ng c\\xF3 b\\xE0i vi\\u1EBFt n\\xE0o!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this); // Show a message if no posts are available\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Danh s\\xE1ch b\\xE0i vi\\u1EBFt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create\",\n        children: \"T\\u1EA1o b\\xE0i vi\\u1EBFt m\\u1EDBi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"Zn4cs3026OJRBhxLd0Oqj+bUOXY=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","PostList","_s","data","setData","loading","setLoading","fetchData","response","get","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","to","map","post","title","content","id","_c","$RefreshReg$"],"sources":["D:/SE18C02-FER202/slot2/demo-json-server/src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"; // Import Link từ react-router-dom\r\n\r\nconst PostList = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Use useEffect to fetch data when the component mounts\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3000/posts\");\r\n        setData(response.data); // Save response data to state\r\n        setLoading(false); // Mark loading as complete\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false); // Make sure to stop loading on error\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Empty array ensures this runs only once when the component mounts\r\n\r\n  if (loading) {\r\n    return <div>Đang tải...</div>; // Show loading message while data is being fetched\r\n  }\r\n\r\n  if (!data || data.length === 0) {\r\n    return <div>Không có bài viết nào!</div>; // Show a message if no posts are available\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Danh sách bài viết</h1>\r\n      <button>\r\n        <Link to=\"/create\">Tạo bài viết mới</Link>{\" \"}\r\n        {/* Button Create dẫn đến trang CreatePost */}\r\n      </button>\r\n      <ul>\r\n        {data.map((post) => (\r\n          <li key={post.id}>\r\n            <h3>{post.title}</h3>\r\n            <p>{post.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}